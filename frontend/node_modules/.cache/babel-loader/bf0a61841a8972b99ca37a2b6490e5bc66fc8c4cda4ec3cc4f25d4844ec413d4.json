{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raiki\\\\OneDrive\\\\Desktop\\\\NeighborFit\\\\frontend\\\\src\\\\MatchForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultWeights = {\n  safety: 25,\n  pollution: 25,\n  cleanliness: 25,\n  greenery: 25\n};\nexport default function MatchForm({\n  onMatch\n}) {\n  _s();\n  const [weights, setWeights] = useState(defaultWeights);\n  const [loading, setLoading] = useState(false);\n  const [selectedCity, setSelectedCity] = useState('');\n  const [cities, setCities] = useState([]);\n  const [maxBudget, setMaxBudget] = useState('');\n  useEffect(() => {\n    // Fetch unique cities from the API\n    fetch('http://localhost:5000/api/neighborhoods').then(res => res.json()).then(neighborhoods => {\n      const uniqueCities = [...new Set(neighborhoods.map(n => n.city))].sort();\n      setCities(uniqueCities);\n    }).catch(err => console.error('Error fetching cities:', err));\n  }, []);\n  const handleChange = name => (e, value) => {\n    setWeights(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedCity) {\n      alert('Please select a city first');\n      return;\n    }\n    setLoading(true);\n    const res = await fetch('http://localhost:5000/api/match', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...weights,\n        city: selectedCity,\n        maxBudget: maxBudget ? Number(maxBudget) : undefined\n      })\n    });\n    const data = await res.json();\n    setLoading(false);\n    onMatch(data);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Find Your Ideal Neighborhood\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Select City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedCity,\n        label: \"Select City\",\n        onChange: e => setSelectedCity(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: \"All Cities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Max Budget (\\u20B9 per month)\",\n      type: \"number\",\n      value: maxBudget,\n      onChange: e => setMaxBudget(e.target.value),\n      margin: \"normal\",\n      inputProps: {\n        min: 0\n      },\n      sx: {\n        mb: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Set Your Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), Object.keys(weights).map(key => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        children: key.charAt(0).toUpperCase() + key.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        value: weights[key],\n        onChange: handleChange(key),\n        min: 0,\n        max: 100,\n        step: 1,\n        valueLabelDisplay: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      disabled: loading || !selectedCity,\n      children: loading ? 'Finding Matches...' : 'Find My Neighborhoods'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(MatchForm, \"cIjKebPQco6SQx1qMKKhDm1yNLY=\");\n_c = MatchForm;\nvar _c;\n$RefreshReg$(_c, \"MatchForm\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Slider","Button","FormControl","InputLabel","Select","MenuItem","TextField","jsxDEV","_jsxDEV","defaultWeights","safety","pollution","cleanliness","greenery","MatchForm","onMatch","_s","weights","setWeights","loading","setLoading","selectedCity","setSelectedCity","cities","setCities","maxBudget","setMaxBudget","fetch","then","res","json","neighborhoods","uniqueCities","Set","map","n","city","sort","catch","err","console","error","handleChange","name","e","value","prev","handleSubmit","preventDefault","alert","method","headers","body","JSON","stringify","Number","undefined","data","component","onSubmit","sx","mt","mb","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","onChange","target","required","type","margin","inputProps","min","Object","keys","key","charAt","toUpperCase","slice","max","step","valueLabelDisplay","disabled","_c","$RefreshReg$"],"sources":["C:/Users/raiki/OneDrive/Desktop/NeighborFit/frontend/src/MatchForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Slider from '@mui/material/Slider';\r\nimport Button from '@mui/material/Button';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst defaultWeights = {\r\n  safety: 25,\r\n  pollution: 25,\r\n  cleanliness: 25,\r\n  greenery: 25,\r\n};\r\n\r\nexport default function MatchForm({ onMatch }) {\r\n  const [weights, setWeights] = useState(defaultWeights);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedCity, setSelectedCity] = useState('');\r\n  const [cities, setCities] = useState([]);\r\n  const [maxBudget, setMaxBudget] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch unique cities from the API\r\n    fetch('http://localhost:5000/api/neighborhoods')\r\n      .then(res => res.json())\r\n      .then(neighborhoods => {\r\n        const uniqueCities = [...new Set(neighborhoods.map(n => n.city))].sort();\r\n        setCities(uniqueCities);\r\n      })\r\n      .catch(err => console.error('Error fetching cities:', err));\r\n  }, []);\r\n\r\n  const handleChange = (name) => (e, value) => {\r\n    setWeights((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!selectedCity) {\r\n      alert('Please select a city first');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const res = await fetch('http://localhost:5000/api/match', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ ...weights, city: selectedCity, maxBudget: maxBudget ? Number(maxBudget) : undefined }),\r\n    });\r\n    const data = await res.json();\r\n    setLoading(false);\r\n    onMatch(data);\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 4, mb: 4 }}>\r\n      <Typography variant=\"h5\" gutterBottom>Find Your Ideal Neighborhood</Typography>\r\n      \r\n      <FormControl fullWidth sx={{ mb: 3 }}>\r\n        <InputLabel>Select City</InputLabel>\r\n        <Select\r\n          value={selectedCity}\r\n          label=\"Select City\"\r\n          onChange={(e) => setSelectedCity(e.target.value)}\r\n          required\r\n        >\r\n          <MenuItem value=\"\">All Cities</MenuItem>\r\n          {cities.map((city) => (\r\n            <MenuItem key={city} value={city}>\r\n              {city}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <TextField\r\n        fullWidth\r\n        label=\"Max Budget (â‚¹ per month)\"\r\n        type=\"number\"\r\n        value={maxBudget}\r\n        onChange={(e) => setMaxBudget(e.target.value)}\r\n        margin=\"normal\"\r\n        inputProps={{ min: 0 }}\r\n        sx={{ mb: 3 }}\r\n      />\r\n\r\n      <Typography variant=\"h6\" gutterBottom>Set Your Preferences</Typography>\r\n      {Object.keys(weights).map((key) => (\r\n        <Box key={key} sx={{ mb: 2 }}>\r\n          <Typography gutterBottom>{key.charAt(0).toUpperCase() + key.slice(1)}</Typography>\r\n          <Slider\r\n            value={weights[key]}\r\n            onChange={handleChange(key)}\r\n            min={0}\r\n            max={100}\r\n            step={1}\r\n            valueLabelDisplay=\"auto\"\r\n          />\r\n        </Box>\r\n      ))}\r\n      <Button type=\"submit\" variant=\"contained\" disabled={loading || !selectedCity}>\r\n        {loading ? 'Finding Matches...' : 'Find My Neighborhoods'}\r\n      </Button>\r\n    </Box>\r\n  );\r\n} "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAe,SAASC,SAASA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAACa,cAAc,CAAC;EACtD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA8B,KAAK,CAAC,yCAAyC,CAAC,CAC7CC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,aAAa,IAAI;MACrB,MAAMC,YAAY,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACF,aAAa,CAACG,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACxEb,SAAS,CAACQ,YAAY,CAAC;IACzB,CAAC,CAAC,CACDM,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAIC,IAAI,IAAK,CAACC,CAAC,EAAEC,KAAK,KAAK;IAC3C3B,UAAU,CAAE4B,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGE;IAAM,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,MAAME,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC3B,YAAY,EAAE;MACjB4B,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACF;IACA7B,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMS,GAAG,GAAG,MAAMF,KAAK,CAAC,iCAAiC,EAAE;MACzDuB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,GAAGrC,OAAO;QAAEmB,IAAI,EAAEf,YAAY;QAAEI,SAAS,EAAEA,SAAS,GAAG8B,MAAM,CAAC9B,SAAS,CAAC,GAAG+B;MAAU,CAAC;IAC/G,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAM5B,GAAG,CAACC,IAAI,CAAC,CAAC;IAC7BV,UAAU,CAAC,KAAK,CAAC;IACjBL,OAAO,CAAC0C,IAAI,CAAC;EACf,CAAC;EAED,oBACEjD,OAAA,CAACV,GAAG;IAAC4D,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAEZ,YAAa;IAACa,EAAE,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACjEvD,OAAA,CAACT,UAAU;MAACiE,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAA4B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAE/E7D,OAAA,CAACN,WAAW;MAACoE,SAAS;MAACV,EAAE,EAAE;QAAEE,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,gBACnCvD,OAAA,CAACL,UAAU;QAAA4D,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACpC7D,OAAA,CAACJ,MAAM;QACLyC,KAAK,EAAExB,YAAa;QACpBkD,KAAK,EAAC,aAAa;QACnBC,QAAQ,EAAG5B,CAAC,IAAKtB,eAAe,CAACsB,CAAC,CAAC6B,MAAM,CAAC5B,KAAK,CAAE;QACjD6B,QAAQ;QAAAX,QAAA,gBAERvD,OAAA,CAACH,QAAQ;UAACwC,KAAK,EAAC,EAAE;UAAAkB,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,EACvC9C,MAAM,CAACW,GAAG,CAAEE,IAAI,iBACf5B,OAAA,CAACH,QAAQ;UAAYwC,KAAK,EAAET,IAAK;UAAA2B,QAAA,EAC9B3B;QAAI,GADQA,IAAI;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEd7D,OAAA,CAACF,SAAS;MACRgE,SAAS;MACTC,KAAK,EAAC,+BAA0B;MAChCI,IAAI,EAAC,QAAQ;MACb9B,KAAK,EAAEpB,SAAU;MACjB+C,QAAQ,EAAG5B,CAAC,IAAKlB,YAAY,CAACkB,CAAC,CAAC6B,MAAM,CAAC5B,KAAK,CAAE;MAC9C+B,MAAM,EAAC,QAAQ;MACfC,UAAU,EAAE;QAAEC,GAAG,EAAE;MAAE,CAAE;MACvBlB,EAAE,EAAE;QAAEE,EAAE,EAAE;MAAE;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eAEF7D,OAAA,CAACT,UAAU;MAACiE,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACtEU,MAAM,CAACC,IAAI,CAAC/D,OAAO,CAAC,CAACiB,GAAG,CAAE+C,GAAG,iBAC5BzE,OAAA,CAACV,GAAG;MAAW8D,EAAE,EAAE;QAAEE,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,gBAC3BvD,OAAA,CAACT,UAAU;QAACkE,YAAY;QAAAF,QAAA,EAAEkB,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,GAAG,CAACG,KAAK,CAAC,CAAC;MAAC;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAClF7D,OAAA,CAACR,MAAM;QACL6C,KAAK,EAAE5B,OAAO,CAACgE,GAAG,CAAE;QACpBT,QAAQ,EAAE9B,YAAY,CAACuC,GAAG,CAAE;QAC5BH,GAAG,EAAE,CAAE;QACPO,GAAG,EAAE,GAAI;QACTC,IAAI,EAAE,CAAE;QACRC,iBAAiB,EAAC;MAAM;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA,GATMY,GAAG;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUR,CACN,CAAC,eACF7D,OAAA,CAACP,MAAM;MAAC0E,IAAI,EAAC,QAAQ;MAACX,OAAO,EAAC,WAAW;MAACwB,QAAQ,EAAErE,OAAO,IAAI,CAACE,YAAa;MAAA0C,QAAA,EAC1E5C,OAAO,GAAG,oBAAoB,GAAG;IAAuB;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACrD,EAAA,CA1FuBF,SAAS;AAAA2E,EAAA,GAAT3E,SAAS;AAAA,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}